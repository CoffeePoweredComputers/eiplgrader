[tool.poetry]
name = "eiplgrader"
version = "0.1.10"
description = "A collection of autograders for the grading of Explain in Plain Language (EiPL) questions."
authors = ["David H. Smith IV <dhsmith2@illinois.edu>"]
license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/CoffeePoweredComputers/eiplgrader"
keywords = [
  "autograder",
  "eipl",
  "explain-in-plain-language",
  "eipe",
  "explain-in-plain-english"
]

[tool.poetry.dependencies]
python = ">=3.13,<3.15"
openai = "^1.37.0"
requests = "^2.31.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
black = "^23.3.0"
pylint = "^2.17.4"
mypy = "^1.3.0"
types-requests = "^2.31.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.pylint.messages_control]
disable = [
  # Documentation - reasonable to disable for now
  "missing-module-docstring",
  "missing-class-docstring", 
  "missing-function-docstring",
  # Design - too restrictive for this codebase
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-positional-arguments",
  "too-many-branches",
  "too-many-statements", 
  "too-many-return-statements",
  "too-many-nested-blocks",
  # Style - handled by black
  "invalid-name",
  "trailing-whitespace",
  "wrong-import-order",
  # Specific patterns that are acceptable in this codebase
  "duplicate-code",
  "no-else-return",
  "no-else-break",
  "protected-access",
  "attribute-defined-outside-init",
  "import-outside-toplevel",
  "f-string-without-interpolation",
  "unspecified-encoding",
  "subprocess-run-check"
]

# Re-enable important code quality checks that were previously disabled:
# - unused-import: catches dead imports
# - unused-variable: catches dead variables  
# - broad-exception-caught: catches poor error handling
# - bare-except: catches dangerous catch-all exceptions
# - import-error: catches missing dependencies
# - unnecessary-pass: catches redundant code

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "type_system: marks tests related to type system functionality",
    "infrastructure: marks tests related to infrastructure functionality", 
    "edge_cases: marks tests related to edge cases and error handling",
    "integration: marks integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
addopts = [
    "--strict-markers",
    "--tb=short"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
