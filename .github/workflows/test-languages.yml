name: Test All Languages

on: [push, pull_request]

jobs:
  test-base:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install base dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Test base system
        run: |
          pytest tests/test_base.py tests/test_registry.py -v || true
          pytest tests/test_codegen.py tests/test_tester.py -v

  test-language:
    needs: test-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language:
          - {name: python, setup: ""}
          - {name: javascript, setup: "sudo apt-get update && sudo apt-get install -y nodejs npm"}
          - {name: go, setup: "sudo apt-get update && sudo apt-get install -y golang"}
          - {name: rust, setup: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source $HOME/.cargo/env"}
          - {name: c, setup: "sudo apt-get update && sudo apt-get install -y gcc"}
          - {name: cpp, setup: "sudo apt-get update && sudo apt-get install -y g++"}
          - {name: java, setup: "sudo apt-get update && sudo apt-get install -y default-jdk"}
          - {name: kotlin, setup: "sudo snap install kotlin --classic || sudo apt-get update && sudo apt-get install -y kotlin"}
          - {name: ruby, setup: "sudo apt-get update && sudo apt-get install -y ruby"}
          - {name: php, setup: "sudo apt-get update && sudo apt-get install -y php"}
          - {name: bash, setup: ""}
          - {name: sql, setup: "sudo apt-get update && sudo apt-get install -y sqlite3"}
          - {name: haskell, setup: "sudo apt-get update && sudo apt-get install -y ghc"}
          - {name: ocaml, setup: "sudo apt-get update && sudo apt-get install -y ocaml opam"}
          - {name: typescript, setup: "sudo apt-get update && sudo apt-get install -y nodejs npm && npm install -g typescript"}
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install language tools
        run: ${{ matrix.language.setup }}
        if: matrix.language.setup != ''
      
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Test language implementation
        run: |
          pytest tests/languages/test_${{ matrix.language.name }}.py -v || echo "Tests not yet implemented for ${{ matrix.language.name }}"
          
      - name: Test language integration
        run: |
          python tests/integration/test_${{ matrix.language.name }}_integration.py || echo "Integration tests not yet implemented for ${{ matrix.language.name }}"